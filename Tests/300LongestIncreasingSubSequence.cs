using Problems;

namespace Tests;

[TestClass]
public class HNTests
{
    [TestMethod]
    public void TestMethod1()
    {
        ///
        /// returns 13
        /// 808,7905,9625,7874,8131,8756,12843,11408,9260,15106,11092,16533,16862,17319,19108,22263,22614,15376,22711,25360,13
        ///
        
        /// returns 40
        /// 304,6601,3040,10068,11466,12288,8752,16165,9690,12871,12627,14062,17957,20776,18354,20653,19535,22028,19977,17473,26922,28593,26019,28271,27187,28638,33000,28421,26836,28748,27414,36472,34452,38615,39125,37237,36056,42746,38499,42999,39469,43232,45488,48220,45543,41283,45229,50226,47918,53198,47783,52396,55939,49492,48714,49585,57410,55082,58108,59386,60361,58075,58022,65372,57681,67516,61418,64939,66041,65598,65115,69248,68933,72369,76425,77412,76632,78943,76809,75048,78128,77323,75999,82237,83730,83109,78279,83600,86734,80967,87468,87453,83461,86610,94064,90990,90236,92016,92701,91506,40
        
        /// returns 190?
        /// 261,5496,2750,11749,4224,8051,13122,9315,9363,10878,16482,15251,20602,15249,20523,14066,22788,18333,23787,25434,19878,28580,25119,21945,22074,24517,28588,33681,28397,28209,35333,37626,30833,32126,35503,31602,37481,40219,39624,38785,38905,44104,40017,41827,48746,45981,46040,49649,52116,46529,52057,51122,48371,51610,51185,50642,52612,57448,52659,60281,56333,54996,57370,62184,66922,64666,66970,70016,68115,69671,69952,67226,71615,70063,75926,71778,70158,69445,70543,78168,79302,79413,80652,80158,80502,86192,84992,87871,79659,80594,86717,84225,84137,88214,87608,92044,88272,88965,91695,95626,97081,100040,100308,101478,103177,96950,101906,99177,104907,107576,101944,109350,104094,110796,109654,110847,109527,107542,108597,109358,114398,117935,116264,114997,114154,120584,115539,114425,123067,126085,124717,125350,123549,123519,120715,126653,131054,132897,126656,133513,129195,135730,129507,131329,133477,130537,139535,134706,142532,142155,137863,139962,137288,144149,141537,149108,150235,150688,147037,147664,144326,153883,15
        /// returns 395?
        /// 937,4382,4069,11844,12380,11495,12033,15258,15539,12566,13079,10377,14324,18825,14329,18546,22288,21637,16335,21213,20450,27403,22111,22224,26176,30109,23916,33943,35017,32633,31317,33294,37372,30024,31900,35136,38127,42944,40741,38556,36709,42894,40541,40863,46359,41253,49538,51933,46255,47351,51959,51927,55059,51184,54190,57893,54759,58634,57990,59205,63256,58827,56930,60024,60421,58628,66573,68109,62728,67515,69103,64794,67423,71682,70219,74816,70633,73511,74070,75470,80011,74326,81054,76269,76589,84653,80729,87215,83992,85224,85960,82551,88036,85891,91112,90896,92790,93477,89577,97822,96488,97556,99606,98013,102700,101808,98530,103131,100014,105439,107151,105330,104103,109732,105978,107273,108108,108242,109503,109240,114580,118202,114492,119263,119141,113577,121912,118039,116097,123016,117407,124057,125854,121084,125244,126858,131134,129481,128937,130063,130006,131098,131136,137016,134696,138888,138075,138629,134332,141228,136437,143764,146433,140942,146319,146394,149505,145645,147701,146416,149219,145648,{-truncated-}

        var ans = HNHackerRank.findLISasDP(new[]
        {
            808, 7905, 9625, 7874, 8131, 8756, 12843, 11408, 9260, 15106, 11092, 16533, 16862, 17319, 19108, 22263,
            22614, 15376, 22711, 25360, 13
        });

        Assert.AreEqual(ans, 14);
    }
    
    
    [TestMethod]
    public void TestMethod2()
    {
        ///
        /// returns 13
        /// 808,7905,9625,7874,8131,8756,12843,11408,9260,15106,11092,16533,16862,17319,19108,22263,22614,15376,22711,25360,13
        ///
        
        /// returns 40
        /// 304,6601,3040,10068,11466,12288,8752,16165,9690,12871,12627,14062,17957,20776,18354,20653,19535,22028,19977,17473,26922,28593,26019,28271,27187,28638,33000,28421,26836,28748,27414,36472,34452,38615,39125,37237,36056,42746,38499,42999,39469,43232,45488,48220,45543,41283,45229,50226,47918,53198,47783,52396,55939,49492,48714,49585,57410,55082,58108,59386,60361,58075,58022,65372,57681,67516,61418,64939,66041,65598,65115,69248,68933,72369,76425,77412,76632,78943,76809,75048,78128,77323,75999,82237,83730,83109,78279,83600,86734,80967,87468,87453,83461,86610,94064,90990,90236,92016,92701,91506,40
        
        /// returns 190?
        /// 261,5496,2750,11749,4224,8051,13122,9315,9363,10878,16482,15251,20602,15249,20523,14066,22788,18333,23787,25434,19878,28580,25119,21945,22074,24517,28588,33681,28397,28209,35333,37626,30833,32126,35503,31602,37481,40219,39624,38785,38905,44104,40017,41827,48746,45981,46040,49649,52116,46529,52057,51122,48371,51610,51185,50642,52612,57448,52659,60281,56333,54996,57370,62184,66922,64666,66970,70016,68115,69671,69952,67226,71615,70063,75926,71778,70158,69445,70543,78168,79302,79413,80652,80158,80502,86192,84992,87871,79659,80594,86717,84225,84137,88214,87608,92044,88272,88965,91695,95626,97081,100040,100308,101478,103177,96950,101906,99177,104907,107576,101944,109350,104094,110796,109654,110847,109527,107542,108597,109358,114398,117935,116264,114997,114154,120584,115539,114425,123067,126085,124717,125350,123549,123519,120715,126653,131054,132897,126656,133513,129195,135730,129507,131329,133477,130537,139535,134706,142532,142155,137863,139962,137288,144149,141537,149108,150235,150688,147037,147664,144326,153883,15
        /// returns 395?
        /// 937,4382,4069,11844,12380,11495,12033,15258,15539,12566,13079,10377,14324,18825,14329,18546,22288,21637,16335,21213,20450,27403,22111,22224,26176,30109,23916,33943,35017,32633,31317,33294,37372,30024,31900,35136,38127,42944,40741,38556,36709,42894,40541,40863,46359,41253,49538,51933,46255,47351,51959,51927,55059,51184,54190,57893,54759,58634,57990,59205,63256,58827,56930,60024,60421,58628,66573,68109,62728,67515,69103,64794,67423,71682,70219,74816,70633,73511,74070,75470,80011,74326,81054,76269,76589,84653,80729,87215,83992,85224,85960,82551,88036,85891,91112,90896,92790,93477,89577,97822,96488,97556,99606,98013,102700,101808,98530,103131,100014,105439,107151,105330,104103,109732,105978,107273,108108,108242,109503,109240,114580,118202,114492,119263,119141,113577,121912,118039,116097,123016,117407,124057,125854,121084,125244,126858,131134,129481,128937,130063,130006,131098,131136,137016,134696,138888,138075,138629,134332,141228,136437,143764,146433,140942,146319,146394,149505,145645,147701,146416,149219,145648,{-truncated-}

        var ans = HNHackerRank.findLISwithBS(new[]
        {
            808, 7905, 9625, 7874, 8131, 8756, 12843, 11408, 9260, 15106, 11092, 16533, 16862, 17319, 19108, 22263,
            22614, 15376, 22711, 25360, 13
        });

        Assert.AreEqual(ans, 14);
    }
}